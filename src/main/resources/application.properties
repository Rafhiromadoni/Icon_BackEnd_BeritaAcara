# # Mengizinkan frontend Vue (yang berjalan di port 5173) untuk mengakses backend
# quarkus.http.cors=true
# quarkus.http.cors.origins=http://localhost:5173
# quarkus.http.cors.methods=GET,POST,PUT,DELETE

# # Konfigurasi Datasource
# # quarkus.datasource.db-kind=postgresql
# # quarkus.datasource.username=quarkus_test
# # quarkus.datasource.password=quarkus_test
# # quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus_test

# # Konfigurasi Hibernate ORM
# # quarkus.hibernate-orm.database.generation=update

# quarkus.datasource.db-kind=postgresql
# quarkus.datasource.devservices.db-name=quarkus_test

# quarkus.hibernate-orm.database.generation=update

# quarkus.live-reload.instrumentation=true

# # Konfigurasi JWT Issuer (penerbit token)
# mp.jwt.verify.issuer=https://yourdomain.com/issuer

# # Konfigurasi JDBC Security Realm
# quarkus.security.jdbc.principal-query.sql=SELECT password, role FROM app_user WHERE username = ?
# quarkus.security.jdbc.principal-query.password-mapper.algorithm=bcrypt
# quarkus.security.jdbc.principal-query.password-mapper.hash-encoding=hex

# =====================================
# Konfigurasi Umum (Berlaku untuk semua profil)
# =====================================
# Mengatur jenis database yang digunakan
quarkus.datasource.db-kind=postgresql

# Mengatur agar Hibernate secara otomatis memperbarui skema database (membuat tabel, dll.)
quarkus.hibernate-orm.database.generation=update

quarkus.live-reload.instrumentation=true

# =====================================
# Konfigurasi Keamanan (JWT & JDBC Realm)
# =====================================
# Nama 'issuer' atau penerbit token JWT. Harus sama dengan yang ada di AuthResource.java
mp.jwt.verify.issuer=https://yourdomain.com/issuer

# Kueri SQL untuk mencari username, password, dan role dari tabel app_user
quarkus.security.jdbc.principal-query.sql=SELECT password FROM app_user WHERE username = ?

# Algoritma hash yang digunakan untuk password di database
quarkus.security.jdbc.principal-query.password-mapper.algorithm=bcrypt

# Encoding dari hash password yang disimpan
quarkus.security.jdbc.principal-query.password-mapper.hash-encoding=hex


# =====================================
# Konfigurasi CORS (Untuk Frontend)
# =====================================
# Mengizinkan permintaan dari origin (domain) yang berbeda
quarkus.http.cors=true
# Secara spesifik mengizinkan permintaan dari server pengembangan Vue.js
quarkus.http.cors.origins=http://localhost:5173
# Mengizinkan header kustom 'X-History-ID' agar bisa dibaca oleh frontend
quarkus.http.cors.exposed-headers=X-History-ID


# =====================================
# Konfigurasi Produksi (%prod)
# =====================================
# Mengambil URL koneksi database dari environment variable untuk keamanan
%prod.quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL}

# Mengatur level log menjadi INFO di mode produksi
%prod.quarkus.log.level=INFO


# =====================================
# Konfigurasi Development (%dev)
# =====================================
# Mengatur nama database yang akan dibuat otomatis oleh Quarkus Dev Services
%dev.quarkus.datasource.devservices.db-name=ba_history_db